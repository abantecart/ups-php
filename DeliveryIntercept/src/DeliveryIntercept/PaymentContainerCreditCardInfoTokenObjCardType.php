<?php
/**
 * PaymentContainerCreditCardInfoTokenObjCardType
 *
 * PHP version 5
 *
 * @category Class
 * @package  UPS\DeliveryIntercept
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Delivery Intercept® API
 *
 * With the UPS Delivery Intercept® API, a shipper can manage the delivery details of their shipment, prior to delivery.  # Business Values  **Key Business Values:** - elimination of manually processing customer requests - acceptance of requests later in the delivery process  <a href=\"https://developer.ups.com/api/reference/deliveryintercept/product-info\" target=\"_blank\" rel=\"noopener\">Product Info</a>  <a href=\"https://god.gw.postman.com/run-collection/29542085-f2409ef1-39c9-4f4a-a509-a3f860068ff4?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D29542085-f2409ef1-39c9-4f4a-a509-a3f860068ff4%26entityType%3Dcollection%26workspaceId%3D7e7595f0-4829-4f9a-aee1-75c126b9d417\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\"> </a>  # CIE Behavior  The Delivery Intercept API will return a stubbed success response if the correct data is used for a given endpoint. The static data that is valid for each of the endpoints is in the table below:  | Endpoint | transId | trackingNumber                                                                                                                                                                                              | |------------|-------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | /charges     | SIICharges         | 1Z4096YY0316914058 | /willcall     | SIIWillcall        | 1Z4096YY0316914058 | /return     | SIIReturn         | 1Z4096YY0316914058 | /reschedule     | SIIReschedule         | 1Z4096YY0316914058 | /redirect/address     | SIIRedirect         | 1Z4096YY0316914058 | /cancel     | SIICancel         | 1Z4096YY0316914058
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.71
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace UPS\DeliveryIntercept\DeliveryIntercept;

use \ArrayAccess;
use \UPS\DeliveryIntercept\ObjectSerializer;

/**
 * PaymentContainerCreditCardInfoTokenObjCardType Class Doc Comment
 *
 * @category Class
 * @package  UPS\DeliveryIntercept
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PaymentContainerCreditCardInfoTokenObjCardType implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PaymentContainer_creditCardInfo_tokenObj_cardType';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'card_type_id' => '',
        'card_type_name' => '',
        'card_type_pcs_name' => '',
        'card_type_length' => '',
        'card_type_max_length' => '',
        'card_type_min_length' => '',
        'card_type_payment_type' => ''
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'card_type_id' => null,
        'card_type_name' => null,
        'card_type_pcs_name' => null,
        'card_type_length' => null,
        'card_type_max_length' => 'int32',
        'card_type_min_length' => 'int32',
        'card_type_payment_type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'card_type_id' => 'cardTypeID',
        'card_type_name' => 'cardTypeName',
        'card_type_pcs_name' => 'cardTypePCSName',
        'card_type_length' => 'cardTypeLength',
        'card_type_max_length' => 'cardTypeMaxLength',
        'card_type_min_length' => 'cardTypeMinLength',
        'card_type_payment_type' => 'cardTypePaymentType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'card_type_id' => 'setCardTypeId',
        'card_type_name' => 'setCardTypeName',
        'card_type_pcs_name' => 'setCardTypePcsName',
        'card_type_length' => 'setCardTypeLength',
        'card_type_max_length' => 'setCardTypeMaxLength',
        'card_type_min_length' => 'setCardTypeMinLength',
        'card_type_payment_type' => 'setCardTypePaymentType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'card_type_id' => 'getCardTypeId',
        'card_type_name' => 'getCardTypeName',
        'card_type_pcs_name' => 'getCardTypePcsName',
        'card_type_length' => 'getCardTypeLength',
        'card_type_max_length' => 'getCardTypeMaxLength',
        'card_type_min_length' => 'getCardTypeMinLength',
        'card_type_payment_type' => 'getCardTypePaymentType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['card_type_id'] = isset($data['card_type_id']) ? $data['card_type_id'] : null;
        $this->container['card_type_name'] = isset($data['card_type_name']) ? $data['card_type_name'] : null;
        $this->container['card_type_pcs_name'] = isset($data['card_type_pcs_name']) ? $data['card_type_pcs_name'] : null;
        $this->container['card_type_length'] = isset($data['card_type_length']) ? $data['card_type_length'] : null;
        $this->container['card_type_max_length'] = isset($data['card_type_max_length']) ? $data['card_type_max_length'] : null;
        $this->container['card_type_min_length'] = isset($data['card_type_min_length']) ? $data['card_type_min_length'] : null;
        $this->container['card_type_payment_type'] = isset($data['card_type_payment_type']) ? $data['card_type_payment_type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets card_type_id
     *
     * @return 
     */
    public function getCardTypeId()
    {
        return $this->container['card_type_id'];
    }

    /**
     * Sets card_type_id
     *
     * @param  $card_type_id The card type ID
     *
     * @return $this
     */
    public function setCardTypeId($card_type_id)
    {
        $this->container['card_type_id'] = $card_type_id;

        return $this;
    }

    /**
     * Gets card_type_name
     *
     * @return 
     */
    public function getCardTypeName()
    {
        return $this->container['card_type_name'];
    }

    /**
     * Sets card_type_name
     *
     * @param  $card_type_name The card type name
     *
     * @return $this
     */
    public function setCardTypeName($card_type_name)
    {
        $this->container['card_type_name'] = $card_type_name;

        return $this;
    }

    /**
     * Gets card_type_pcs_name
     *
     * @return 
     */
    public function getCardTypePcsName()
    {
        return $this->container['card_type_pcs_name'];
    }

    /**
     * Sets card_type_pcs_name
     *
     * @param  $card_type_pcs_name the card type PCS name
     *
     * @return $this
     */
    public function setCardTypePcsName($card_type_pcs_name)
    {
        $this->container['card_type_pcs_name'] = $card_type_pcs_name;

        return $this;
    }

    /**
     * Gets card_type_length
     *
     * @return 
     */
    public function getCardTypeLength()
    {
        return $this->container['card_type_length'];
    }

    /**
     * Sets card_type_length
     *
     * @param  $card_type_length the card type length
     *
     * @return $this
     */
    public function setCardTypeLength($card_type_length)
    {
        $this->container['card_type_length'] = $card_type_length;

        return $this;
    }

    /**
     * Gets card_type_max_length
     *
     * @return 
     */
    public function getCardTypeMaxLength()
    {
        return $this->container['card_type_max_length'];
    }

    /**
     * Sets card_type_max_length
     *
     * @param  $card_type_max_length the max length for card type
     *
     * @return $this
     */
    public function setCardTypeMaxLength($card_type_max_length)
    {
        $this->container['card_type_max_length'] = $card_type_max_length;

        return $this;
    }

    /**
     * Gets card_type_min_length
     *
     * @return 
     */
    public function getCardTypeMinLength()
    {
        return $this->container['card_type_min_length'];
    }

    /**
     * Sets card_type_min_length
     *
     * @param  $card_type_min_length the min length for card type
     *
     * @return $this
     */
    public function setCardTypeMinLength($card_type_min_length)
    {
        $this->container['card_type_min_length'] = $card_type_min_length;

        return $this;
    }

    /**
     * Gets card_type_payment_type
     *
     * @return 
     */
    public function getCardTypePaymentType()
    {
        return $this->container['card_type_payment_type'];
    }

    /**
     * Sets card_type_payment_type
     *
     * @param  $card_type_payment_type the card type payment type
     *
     * @return $this
     */
    public function setCardTypePaymentType($card_type_payment_type)
    {
        $this->container['card_type_payment_type'] = $card_type_payment_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
