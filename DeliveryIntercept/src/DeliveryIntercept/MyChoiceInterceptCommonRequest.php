<?php
/**
 * MyChoiceInterceptCommonRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  UPS\DeliveryIntercept
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Delivery Intercept® API
 *
 * With the UPS Delivery Intercept® API, a shipper can manage the delivery details of their shipment, prior to delivery.  # Business Values  **Key Business Values:** - elimination of manually processing customer requests - acceptance of requests later in the delivery process  <a href=\"https://developer.ups.com/api/reference/deliveryintercept/product-info\" target=\"_blank\" rel=\"noopener\">Product Info</a>  <a href=\"https://god.gw.postman.com/run-collection/29542085-f2409ef1-39c9-4f4a-a509-a3f860068ff4?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D29542085-f2409ef1-39c9-4f4a-a509-a3f860068ff4%26entityType%3Dcollection%26workspaceId%3D7e7595f0-4829-4f9a-aee1-75c126b9d417\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\"> </a>  # CIE Behavior  The Delivery Intercept API will return a stubbed success response if the correct data is used for a given endpoint. The static data that is valid for each of the endpoints is in the table below:  | Endpoint | transId | trackingNumber                                                                                                                                                                                              | |------------|-------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | /charges     | SIICharges         | 1Z4096YY0316914058 | /willcall     | SIIWillcall        | 1Z4096YY0316914058 | /return     | SIIReturn         | 1Z4096YY0316914058 | /reschedule     | SIIReschedule         | 1Z4096YY0316914058 | /redirect/address     | SIIRedirect         | 1Z4096YY0316914058 | /cancel     | SIICancel         | 1Z4096YY0316914058
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.71
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace UPS\DeliveryIntercept\DeliveryIntercept;

use \ArrayAccess;
use \UPS\DeliveryIntercept\ObjectSerializer;

/**
 * MyChoiceInterceptCommonRequest Class Doc Comment
 *
 * @category Class
 * @package  UPS\DeliveryIntercept
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MyChoiceInterceptCommonRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'MyChoiceInterceptCommonRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'special_instructions' => '',
        'original_public_location_id' => '',
        'charge_info' => '',
        'udi_contact_info' => '\UPS\DeliveryIntercept\DeliveryIntercept\ContactInfo',
        'iobb' => '',
        'tmx_session_id' => '',
        'payment_container' => '\UPS\DeliveryIntercept\DeliveryIntercept\PaymentContainer',
        'eb_pld_sequence_number' => '',
        'eb_pl_dshipment_key' => '',
        'lead_tracking_number' => '',
        'multi_tracking_numbers' => ''
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'special_instructions' => null,
        'original_public_location_id' => null,
        'charge_info' => null,
        'udi_contact_info' => null,
        'iobb' => null,
        'tmx_session_id' => null,
        'payment_container' => null,
        'eb_pld_sequence_number' => null,
        'eb_pl_dshipment_key' => null,
        'lead_tracking_number' => null,
        'multi_tracking_numbers' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'special_instructions' => 'specialInstructions',
        'original_public_location_id' => 'originalPublicLocationId',
        'charge_info' => 'chargeInfo',
        'udi_contact_info' => 'udiContactInfo',
        'iobb' => 'iobb',
        'tmx_session_id' => 'tmxSessionId',
        'payment_container' => 'paymentContainer',
        'eb_pld_sequence_number' => 'ebPLDSequenceNumber',
        'eb_pl_dshipment_key' => 'ebPLDshipmentKey',
        'lead_tracking_number' => 'leadTrackingNumber',
        'multi_tracking_numbers' => 'multiTrackingNumbers'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'special_instructions' => 'setSpecialInstructions',
        'original_public_location_id' => 'setOriginalPublicLocationId',
        'charge_info' => 'setChargeInfo',
        'udi_contact_info' => 'setUdiContactInfo',
        'iobb' => 'setIobb',
        'tmx_session_id' => 'setTmxSessionId',
        'payment_container' => 'setPaymentContainer',
        'eb_pld_sequence_number' => 'setEbPldSequenceNumber',
        'eb_pl_dshipment_key' => 'setEbPlDshipmentKey',
        'lead_tracking_number' => 'setLeadTrackingNumber',
        'multi_tracking_numbers' => 'setMultiTrackingNumbers'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'special_instructions' => 'getSpecialInstructions',
        'original_public_location_id' => 'getOriginalPublicLocationId',
        'charge_info' => 'getChargeInfo',
        'udi_contact_info' => 'getUdiContactInfo',
        'iobb' => 'getIobb',
        'tmx_session_id' => 'getTmxSessionId',
        'payment_container' => 'getPaymentContainer',
        'eb_pld_sequence_number' => 'getEbPldSequenceNumber',
        'eb_pl_dshipment_key' => 'getEbPlDshipmentKey',
        'lead_tracking_number' => 'getLeadTrackingNumber',
        'multi_tracking_numbers' => 'getMultiTrackingNumbers'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['special_instructions'] = isset($data['special_instructions']) ? $data['special_instructions'] : null;
        $this->container['original_public_location_id'] = isset($data['original_public_location_id']) ? $data['original_public_location_id'] : null;
        $this->container['charge_info'] = isset($data['charge_info']) ? $data['charge_info'] : null;
        $this->container['udi_contact_info'] = isset($data['udi_contact_info']) ? $data['udi_contact_info'] : null;
        $this->container['iobb'] = isset($data['iobb']) ? $data['iobb'] : null;
        $this->container['tmx_session_id'] = isset($data['tmx_session_id']) ? $data['tmx_session_id'] : null;
        $this->container['payment_container'] = isset($data['payment_container']) ? $data['payment_container'] : null;
        $this->container['eb_pld_sequence_number'] = isset($data['eb_pld_sequence_number']) ? $data['eb_pld_sequence_number'] : null;
        $this->container['eb_pl_dshipment_key'] = isset($data['eb_pl_dshipment_key']) ? $data['eb_pl_dshipment_key'] : null;
        $this->container['lead_tracking_number'] = isset($data['lead_tracking_number']) ? $data['lead_tracking_number'] : null;
        $this->container['multi_tracking_numbers'] = isset($data['multi_tracking_numbers']) ? $data['multi_tracking_numbers'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets special_instructions
     *
     * @return 
     */
    public function getSpecialInstructions()
    {
        return $this->container['special_instructions'];
    }

    /**
     * Sets special_instructions
     *
     * @param  $special_instructions Special Instructions sent to the driver.
     *
     * @return $this
     */
    public function setSpecialInstructions($special_instructions)
    {
        $this->container['special_instructions'] = $special_instructions;

        return $this;
    }

    /**
     * Gets original_public_location_id
     *
     * @return 
     */
    public function getOriginalPublicLocationId()
    {
        return $this->container['original_public_location_id'];
    }

    /**
     * Sets original_public_location_id
     *
     * @param  $original_public_location_id The original UAP public location ID where the package is currently located or in-transit to. Format- UXXXXXXXX  ('U' followed by 8 numbers)
     *
     * @return $this
     */
    public function setOriginalPublicLocationId($original_public_location_id)
    {
        $this->container['original_public_location_id'] = $original_public_location_id;

        return $this;
    }

    /**
     * Gets charge_info
     *
     * @return 
     */
    public function getChargeInfo()
    {
        return $this->container['charge_info'];
    }

    /**
     * Sets charge_info
     *
     * @param  $charge_info A list containing the charges for each tracking number in the request. This array is unbounded.
     *
     * @return $this
     */
    public function setChargeInfo($charge_info)
    {
        $this->container['charge_info'] = $charge_info;

        return $this;
    }

    /**
     * Gets udi_contact_info
     *
     * @return \UPS\DeliveryIntercept\DeliveryIntercept\ContactInfo
     */
    public function getUdiContactInfo()
    {
        return $this->container['udi_contact_info'];
    }

    /**
     * Sets udi_contact_info
     *
     * @param \UPS\DeliveryIntercept\DeliveryIntercept\ContactInfo $udi_contact_info udi_contact_info
     *
     * @return $this
     */
    public function setUdiContactInfo($udi_contact_info)
    {
        $this->container['udi_contact_info'] = $udi_contact_info;

        return $this;
    }

    /**
     * Gets iobb
     *
     * @return 
     */
    public function getIobb()
    {
        return $this->container['iobb'];
    }

    /**
     * Sets iobb
     *
     * @param  $iobb iOvations Black Box data. Used for fraud checking/scoring.   | S.NO. | DESCRIPTION                                 | | :--:  | :--                                         | | 1    | iobb value is labeled “EMPTY”               | | 2.   | tmid is populated with the Threat Metrix ID |
     *
     * @return $this
     */
    public function setIobb($iobb)
    {
        $this->container['iobb'] = $iobb;

        return $this;
    }

    /**
     * Gets tmx_session_id
     *
     * @return 
     */
    public function getTmxSessionId()
    {
        return $this->container['tmx_session_id'];
    }

    /**
     * Sets tmx_session_id
     *
     * @param  $tmx_session_id Threat Matrix session ID. Used for fraud checking/scoring.
     *
     * @return $this
     */
    public function setTmxSessionId($tmx_session_id)
    {
        $this->container['tmx_session_id'] = $tmx_session_id;

        return $this;
    }

    /**
     * Gets payment_container
     *
     * @return \UPS\DeliveryIntercept\DeliveryIntercept\PaymentContainer
     */
    public function getPaymentContainer()
    {
        return $this->container['payment_container'];
    }

    /**
     * Sets payment_container
     *
     * @param \UPS\DeliveryIntercept\DeliveryIntercept\PaymentContainer $payment_container payment_container
     *
     * @return $this
     */
    public function setPaymentContainer($payment_container)
    {
        $this->container['payment_container'] = $payment_container;

        return $this;
    }

    /**
     * Gets eb_pld_sequence_number
     *
     * @return 
     */
    public function getEbPldSequenceNumber()
    {
        return $this->container['eb_pld_sequence_number'];
    }

    /**
     * Sets eb_pld_sequence_number
     *
     * @param  $eb_pld_sequence_number Sequence number for the rackingNumber within the shipment. Used to update SII shipper history.
     *
     * @return $this
     */
    public function setEbPldSequenceNumber($eb_pld_sequence_number)
    {
        $this->container['eb_pld_sequence_number'] = $eb_pld_sequence_number;

        return $this;
    }

    /**
     * Gets eb_pl_dshipment_key
     *
     * @return 
     */
    public function getEbPlDshipmentKey()
    {
        return $this->container['eb_pl_dshipment_key'];
    }

    /**
     * Sets eb_pl_dshipment_key
     *
     * @param  $eb_pl_dshipment_key eb_pl_dshipment_key
     *
     * @return $this
     */
    public function setEbPlDshipmentKey($eb_pl_dshipment_key)
    {
        $this->container['eb_pl_dshipment_key'] = $eb_pl_dshipment_key;

        return $this;
    }

    /**
     * Gets lead_tracking_number
     *
     * @return 
     */
    public function getLeadTrackingNumber()
    {
        return $this->container['lead_tracking_number'];
    }

    /**
     * Sets lead_tracking_number
     *
     * @param  $lead_tracking_number Tracking Number for the lead package in the shipment. Used to update SII shipper history.
     *
     * @return $this
     */
    public function setLeadTrackingNumber($lead_tracking_number)
    {
        $this->container['lead_tracking_number'] = $lead_tracking_number;

        return $this;
    }

    /**
     * Gets multi_tracking_numbers
     *
     * @return 
     */
    public function getMultiTrackingNumbers()
    {
        return $this->container['multi_tracking_numbers'];
    }

    /**
     * Sets multi_tracking_numbers
     *
     * @param  $multi_tracking_numbers This unbounded array is required only for the API version v3. It is used to process multiple tracking numbers with the same request.
     *
     * @return $this
     */
    public function setMultiTrackingNumbers($multi_tracking_numbers)
    {
        $this->container['multi_tracking_numbers'] = $multi_tracking_numbers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
