<?php
/**
 * AddressBookEntry
 *
 * PHP version 5
 *
 * @category Class
 * @package  UPS\DeliveryIntercept
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Delivery Intercept® API
 *
 * With the UPS Delivery Intercept® API, a shipper can manage the delivery details of their shipment, prior to delivery.  # Business Values  **Key Business Values:** - elimination of manually processing customer requests - acceptance of requests later in the delivery process  <a href=\"https://developer.ups.com/api/reference/deliveryintercept/product-info\" target=\"_blank\" rel=\"noopener\">Product Info</a>  <a href=\"https://god.gw.postman.com/run-collection/29542085-f2409ef1-39c9-4f4a-a509-a3f860068ff4?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D29542085-f2409ef1-39c9-4f4a-a509-a3f860068ff4%26entityType%3Dcollection%26workspaceId%3D7e7595f0-4829-4f9a-aee1-75c126b9d417\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\"> </a>  # CIE Behavior  The Delivery Intercept API will return a stubbed success response if the correct data is used for a given endpoint. The static data that is valid for each of the endpoints is in the table below:  | Endpoint | transId | trackingNumber                                                                                                                                                                                              | |------------|-------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | /charges     | SIICharges         | 1Z4096YY0316914058 | /willcall     | SIIWillcall        | 1Z4096YY0316914058 | /return     | SIIReturn         | 1Z4096YY0316914058 | /reschedule     | SIIReschedule         | 1Z4096YY0316914058 | /redirect/address     | SIIRedirect         | 1Z4096YY0316914058 | /cancel     | SIICancel         | 1Z4096YY0316914058
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.71
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace UPS\DeliveryIntercept\DeliveryIntercept;

use \ArrayAccess;
use \UPS\DeliveryIntercept\ObjectSerializer;

/**
 * AddressBookEntry Class Doc Comment
 *
 * @category Class
 * @package  UPS\DeliveryIntercept
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AddressBookEntry implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AddressBookEntry';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'ims_addr_identifier' => '',
        'address_nick_name' => '',
        'address_info' => '\UPS\DeliveryIntercept\DeliveryIntercept\AddressInformation',
        'name_or_company_name' => '',
        'contact_name' => '',
        'phone_number' => '',
        'phone_ext' => '',
        'email_address' => ''
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'ims_addr_identifier' => null,
        'address_nick_name' => null,
        'address_info' => null,
        'name_or_company_name' => null,
        'contact_name' => null,
        'phone_number' => null,
        'phone_ext' => null,
        'email_address' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'ims_addr_identifier' => 'imsAddrIdentifier',
        'address_nick_name' => 'addressNickName',
        'address_info' => 'addressInfo',
        'name_or_company_name' => 'nameOrCompanyName',
        'contact_name' => 'contactName',
        'phone_number' => 'phoneNumber',
        'phone_ext' => 'phoneExt',
        'email_address' => 'emailAddress'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'ims_addr_identifier' => 'setImsAddrIdentifier',
        'address_nick_name' => 'setAddressNickName',
        'address_info' => 'setAddressInfo',
        'name_or_company_name' => 'setNameOrCompanyName',
        'contact_name' => 'setContactName',
        'phone_number' => 'setPhoneNumber',
        'phone_ext' => 'setPhoneExt',
        'email_address' => 'setEmailAddress'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'ims_addr_identifier' => 'getImsAddrIdentifier',
        'address_nick_name' => 'getAddressNickName',
        'address_info' => 'getAddressInfo',
        'name_or_company_name' => 'getNameOrCompanyName',
        'contact_name' => 'getContactName',
        'phone_number' => 'getPhoneNumber',
        'phone_ext' => 'getPhoneExt',
        'email_address' => 'getEmailAddress'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ims_addr_identifier'] = isset($data['ims_addr_identifier']) ? $data['ims_addr_identifier'] : null;
        $this->container['address_nick_name'] = isset($data['address_nick_name']) ? $data['address_nick_name'] : null;
        $this->container['address_info'] = isset($data['address_info']) ? $data['address_info'] : null;
        $this->container['name_or_company_name'] = isset($data['name_or_company_name']) ? $data['name_or_company_name'] : null;
        $this->container['contact_name'] = isset($data['contact_name']) ? $data['contact_name'] : null;
        $this->container['phone_number'] = isset($data['phone_number']) ? $data['phone_number'] : null;
        $this->container['phone_ext'] = isset($data['phone_ext']) ? $data['phone_ext'] : null;
        $this->container['email_address'] = isset($data['email_address']) ? $data['email_address'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets ims_addr_identifier
     *
     * @return 
     */
    public function getImsAddrIdentifier()
    {
        return $this->container['ims_addr_identifier'];
    }

    /**
     * Sets ims_addr_identifier
     *
     * @param  $ims_addr_identifier The IMS Entry Number of the address, required when retrieving or updating an IMS address book entry. Required when specifying an existing address book entry to be used when processing a request.
     *
     * @return $this
     */
    public function setImsAddrIdentifier($ims_addr_identifier)
    {
        $this->container['ims_addr_identifier'] = $ims_addr_identifier;

        return $this;
    }

    /**
     * Gets address_nick_name
     *
     * @return 
     */
    public function getAddressNickName()
    {
        return $this->container['address_nick_name'];
    }

    /**
     * Sets address_nick_name
     *
     * @param  $address_nick_name The nickname string assigned to the address entry. Required when creating or updating an IMS address book entry.
     *
     * @return $this
     */
    public function setAddressNickName($address_nick_name)
    {
        $this->container['address_nick_name'] = $address_nick_name;

        return $this;
    }

    /**
     * Gets address_info
     *
     * @return \UPS\DeliveryIntercept\DeliveryIntercept\AddressInformation
     */
    public function getAddressInfo()
    {
        return $this->container['address_info'];
    }

    /**
     * Sets address_info
     *
     * @param \UPS\DeliveryIntercept\DeliveryIntercept\AddressInformation $address_info Address object, include line1, line2, line 3 state, postal code and country code. Required when processing a request if imsAddressIdentifier is not present.
     *
     * @return $this
     */
    public function setAddressInfo($address_info)
    {
        $this->container['address_info'] = $address_info;

        return $this;
    }

    /**
     * Gets name_or_company_name
     *
     * @return 
     */
    public function getNameOrCompanyName()
    {
        return $this->container['name_or_company_name'];
    }

    /**
     * Sets name_or_company_name
     *
     * @param  $name_or_company_name The name of the company or person customer address.(Required When calling submitAddress() API  Empty String  can be passed)
     *
     * @return $this
     */
    public function setNameOrCompanyName($name_or_company_name)
    {
        $this->container['name_or_company_name'] = $name_or_company_name;

        return $this;
    }

    /**
     * Gets contact_name
     *
     * @return 
     */
    public function getContactName()
    {
        return $this->container['contact_name'];
    }

    /**
     * Sets contact_name
     *
     * @param  $contact_name The contact name at the customer address.
     *
     * @return $this
     */
    public function setContactName($contact_name)
    {
        $this->container['contact_name'] = $contact_name;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return 
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param  $phone_number The contact phone number at the customer address.(Required When calling submitAddress() API  Empty String  can be passed)
     *
     * @return $this
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets phone_ext
     *
     * @return 
     */
    public function getPhoneExt()
    {
        return $this->container['phone_ext'];
    }

    /**
     * Sets phone_ext
     *
     * @param  $phone_ext The phone extension number at the customer address.(Required When calling submitAddress() API  Empty String  can be passed)
     *
     * @return $this
     */
    public function setPhoneExt($phone_ext)
    {
        $this->container['phone_ext'] = $phone_ext;

        return $this;
    }

    /**
     * Gets email_address
     *
     * @return 
     */
    public function getEmailAddress()
    {
        return $this->container['email_address'];
    }

    /**
     * Sets email_address
     *
     * @param  $email_address Email Address at the customer address.
     *
     * @return $this
     */
    public function setEmailAddress($email_address)
    {
        $this->container['email_address'] = $email_address;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
