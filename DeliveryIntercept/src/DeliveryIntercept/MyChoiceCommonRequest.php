<?php
/**
 * MyChoiceCommonRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  UPS\DeliveryIntercept
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Delivery Intercept® API
 *
 * With the UPS Delivery Intercept® API, a shipper can manage the delivery details of their shipment, prior to delivery.  # Business Values  **Key Business Values:** - elimination of manually processing customer requests - acceptance of requests later in the delivery process  <a href=\"https://developer.ups.com/api/reference/deliveryintercept/product-info\" target=\"_blank\" rel=\"noopener\">Product Info</a>  <a href=\"https://god.gw.postman.com/run-collection/29542085-f2409ef1-39c9-4f4a-a509-a3f860068ff4?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D29542085-f2409ef1-39c9-4f4a-a509-a3f860068ff4%26entityType%3Dcollection%26workspaceId%3D7e7595f0-4829-4f9a-aee1-75c126b9d417\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\"> </a>  # CIE Behavior  The Delivery Intercept API will return a stubbed success response if the correct data is used for a given endpoint. The static data that is valid for each of the endpoints is in the table below:  | Endpoint | transId | trackingNumber                                                                                                                                                                                              | |------------|-------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | /charges     | SIICharges         | 1Z4096YY0316914058 | /willcall     | SIIWillcall        | 1Z4096YY0316914058 | /return     | SIIReturn         | 1Z4096YY0316914058 | /reschedule     | SIIReschedule         | 1Z4096YY0316914058 | /redirect/address     | SIIRedirect         | 1Z4096YY0316914058 | /cancel     | SIICancel         | 1Z4096YY0316914058
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.71
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace UPS\DeliveryIntercept\DeliveryIntercept;

use \ArrayAccess;
use \UPS\DeliveryIntercept\ObjectSerializer;

/**
 * MyChoiceCommonRequest Class Doc Comment
 *
 * @category Class
 * @package  UPS\DeliveryIntercept
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MyChoiceCommonRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'MyChoiceCommonRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'client_id' => '',
        'transaction_id' => '',
        'source' => '',
        'loc' => '',
        'address_token' => '',
        'client_ip' => '',
        'tracking_number' => '',
        'consignee_address_country_code' => '',
        'consignee_address_zip_code' => '',
        'info_notice_number' => '',
        'notification_request_type' => '',
        'request_type' => '',
        'requester_contact_info' => '\UPS\DeliveryIntercept\DeliveryIntercept\ContactInfo'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'client_id' => null,
        'transaction_id' => null,
        'source' => null,
        'loc' => null,
        'address_token' => null,
        'client_ip' => null,
        'tracking_number' => null,
        'consignee_address_country_code' => null,
        'consignee_address_zip_code' => null,
        'info_notice_number' => null,
        'notification_request_type' => null,
        'request_type' => null,
        'requester_contact_info' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'client_id' => 'clientId',
        'transaction_id' => 'transactionId',
        'source' => 'source',
        'loc' => 'loc',
        'address_token' => 'addressToken',
        'client_ip' => 'clientIP',
        'tracking_number' => 'trackingNumber',
        'consignee_address_country_code' => 'consigneeAddressCountryCode',
        'consignee_address_zip_code' => 'consigneeAddressZipCode',
        'info_notice_number' => 'infoNoticeNumber',
        'notification_request_type' => 'notificationRequestType',
        'request_type' => 'requestType',
        'requester_contact_info' => 'requesterContactInfo'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'client_id' => 'setClientId',
        'transaction_id' => 'setTransactionId',
        'source' => 'setSource',
        'loc' => 'setLoc',
        'address_token' => 'setAddressToken',
        'client_ip' => 'setClientIp',
        'tracking_number' => 'setTrackingNumber',
        'consignee_address_country_code' => 'setConsigneeAddressCountryCode',
        'consignee_address_zip_code' => 'setConsigneeAddressZipCode',
        'info_notice_number' => 'setInfoNoticeNumber',
        'notification_request_type' => 'setNotificationRequestType',
        'request_type' => 'setRequestType',
        'requester_contact_info' => 'setRequesterContactInfo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'client_id' => 'getClientId',
        'transaction_id' => 'getTransactionId',
        'source' => 'getSource',
        'loc' => 'getLoc',
        'address_token' => 'getAddressToken',
        'client_ip' => 'getClientIp',
        'tracking_number' => 'getTrackingNumber',
        'consignee_address_country_code' => 'getConsigneeAddressCountryCode',
        'consignee_address_zip_code' => 'getConsigneeAddressZipCode',
        'info_notice_number' => 'getInfoNoticeNumber',
        'notification_request_type' => 'getNotificationRequestType',
        'request_type' => 'getRequestType',
        'requester_contact_info' => 'getRequesterContactInfo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['client_id'] = isset($data['client_id']) ? $data['client_id'] : null;
        $this->container['transaction_id'] = isset($data['transaction_id']) ? $data['transaction_id'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['loc'] = isset($data['loc']) ? $data['loc'] : null;
        $this->container['address_token'] = isset($data['address_token']) ? $data['address_token'] : null;
        $this->container['client_ip'] = isset($data['client_ip']) ? $data['client_ip'] : null;
        $this->container['tracking_number'] = isset($data['tracking_number']) ? $data['tracking_number'] : null;
        $this->container['consignee_address_country_code'] = isset($data['consignee_address_country_code']) ? $data['consignee_address_country_code'] : null;
        $this->container['consignee_address_zip_code'] = isset($data['consignee_address_zip_code']) ? $data['consignee_address_zip_code'] : null;
        $this->container['info_notice_number'] = isset($data['info_notice_number']) ? $data['info_notice_number'] : null;
        $this->container['notification_request_type'] = isset($data['notification_request_type']) ? $data['notification_request_type'] : null;
        $this->container['request_type'] = isset($data['request_type']) ? $data['request_type'] : null;
        $this->container['requester_contact_info'] = isset($data['requester_contact_info']) ? $data['requester_contact_info'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['client_ip'] === null) {
            $invalidProperties[] = "'client_ip' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets client_id
     *
     * @return 
     */
    public function getClientId()
    {
        return $this->container['client_id'];
    }

    /**
     * Sets client_id
     *
     * @param  $client_id A unique value that identifies the client application.
     *
     * @return $this
     */
    public function setClientId($client_id)
    {
        $this->container['client_id'] = $client_id;

        return $this;
    }

    /**
     * Gets transaction_id
     *
     * @return 
     */
    public function getTransactionId()
    {
        return $this->container['transaction_id'];
    }

    /**
     * Sets transaction_id
     *
     * @param  $transaction_id A unique value that will be used to identify the transaction for logging and troubleshooting purposes
     *
     * @return $this
     */
    public function setTransactionId($transaction_id)
    {
        $this->container['transaction_id'] = $transaction_id;

        return $this;
    }

    /**
     * Gets source
     *
     * @return 
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param  $source A unique value that identifies where the request originated from.
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets loc
     *
     * @return 
     */
    public function getLoc()
    {
        return $this->container['loc'];
    }

    /**
     * Sets loc
     *
     * @param  $loc The locale of the client application. This must be set to ensure that translations on the response are in the proper language.
     *
     * @return $this
     */
    public function setLoc($loc)
    {
        $this->container['loc'] = $loc;

        return $this;
    }

    /**
     * Gets address_token
     *
     * @return 
     */
    public function getAddressToken()
    {
        return $this->container['address_token'];
    }

    /**
     * Sets address_token
     *
     * @param  $address_token wherever tracking number is required, or when a method defines if required.
     *
     * @return $this
     */
    public function setAddressToken($address_token)
    {
        $this->container['address_token'] = $address_token;

        return $this;
    }

    /**
     * Gets client_ip
     *
     * @return 
     */
    public function getClientIp()
    {
        return $this->container['client_ip'];
    }

    /**
     * Sets client_ip
     *
     * @param  $client_ip The IP of the remote client
     *
     * @return $this
     */
    public function setClientIp($client_ip)
    {
        $this->container['client_ip'] = $client_ip;

        return $this;
    }

    /**
     * Gets tracking_number
     *
     * @return 
     */
    public function getTrackingNumber()
    {
        return $this->container['tracking_number'];
    }

    /**
     * Sets tracking_number
     *
     * @param  $tracking_number The number being tracked.
     *
     * @return $this
     */
    public function setTrackingNumber($tracking_number)
    {
        $this->container['tracking_number'] = $tracking_number;

        return $this;
    }

    /**
     * Gets consignee_address_country_code
     *
     * @return 
     */
    public function getConsigneeAddressCountryCode()
    {
        return $this->container['consignee_address_country_code'];
    }

    /**
     * Sets consignee_address_country_code
     *
     * @param  $consignee_address_country_code consignee_address_country_code
     *
     * @return $this
     */
    public function setConsigneeAddressCountryCode($consignee_address_country_code)
    {
        $this->container['consignee_address_country_code'] = $consignee_address_country_code;

        return $this;
    }

    /**
     * Gets consignee_address_zip_code
     *
     * @return 
     */
    public function getConsigneeAddressZipCode()
    {
        return $this->container['consignee_address_zip_code'];
    }

    /**
     * Sets consignee_address_zip_code
     *
     * @param  $consignee_address_zip_code consignee_address_zip_code
     *
     * @return $this
     */
    public function setConsigneeAddressZipCode($consignee_address_zip_code)
    {
        $this->container['consignee_address_zip_code'] = $consignee_address_zip_code;

        return $this;
    }

    /**
     * Gets info_notice_number
     *
     * @return 
     */
    public function getInfoNoticeNumber()
    {
        return $this->container['info_notice_number'];
    }

    /**
     * Sets info_notice_number
     *
     * @param  $info_notice_number Infonotice number or BCDN number
     *
     * @return $this
     */
    public function setInfoNoticeNumber($info_notice_number)
    {
        $this->container['info_notice_number'] = $info_notice_number;

        return $this;
    }

    /**
     * Gets notification_request_type
     *
     * @return 
     */
    public function getNotificationRequestType()
    {
        return $this->container['notification_request_type'];
    }

    /**
     * Sets notification_request_type
     *
     * @param  $notification_request_type notification_request_type
     *
     * @return $this
     */
    public function setNotificationRequestType($notification_request_type)
    {
        $this->container['notification_request_type'] = $notification_request_type;

        return $this;
    }

    /**
     * Gets request_type
     *
     * @return 
     */
    public function getRequestType()
    {
        return $this->container['request_type'];
    }

    /**
     * Sets request_type
     *
     * @param  $request_type The request type of the intercept being performed. Each method defines if required.  | VALUE | DESCRIPTION                     | | :--:  | :--                             | | WC   | WILL_CALL                       | | SC   | SAME_DAY_WILL_CALL              | | FD   | FUTURE_DELIVERY                 | | AA   | ALTERNATE_ADDRESS               | | UR   | UPS_RETAIL_LOCATION             | | RA   | REDELIVER_TO_MY_ADDRESS         | | RS   | RETURN_TO_SENDER                | | AC   | ADDRESS_CORRECTION              | | UGR   | UPGRADE_TO_GROUND               | | UFD   | UPGRADE_AND_FUTURE_DELIVERY     | | UWC   | UPGRADE_AND_WILL_CALL           | | UUR   | UPGRADE_AND_UPS_RETAIL_LOCATION | | UAA   | UPGRADE_AND_ALTERNATE_ADDRESS   | | XUR   | DELIVER_TO_UAP_NEXT_DAY         |
     *
     * @return $this
     */
    public function setRequestType($request_type)
    {
        $this->container['request_type'] = $request_type;

        return $this;
    }

    /**
     * Gets requester_contact_info
     *
     * @return \UPS\DeliveryIntercept\DeliveryIntercept\ContactInfo
     */
    public function getRequesterContactInfo()
    {
        return $this->container['requester_contact_info'];
    }

    /**
     * Sets requester_contact_info
     *
     * @param \UPS\DeliveryIntercept\DeliveryIntercept\ContactInfo $requester_contact_info requester_contact_info
     *
     * @return $this
     */
    public function setRequesterContactInfo($requester_contact_info)
    {
        $this->container['requester_contact_info'] = $requester_contact_info;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
