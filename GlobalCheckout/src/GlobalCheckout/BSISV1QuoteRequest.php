<?php
/**
 * BSISV1QuoteRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  UPS\GlobalCheckout
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Guaranteed Quote API v1
 *
 * This API provides a Global Landed Cost (GLC) duty and tax rate quote for shippers.  ## Key Business Values - Simplifies the International Cross Border shipping process.  For more information on the Global Checkout API, please visit the <a href=\"https://developer.ups.com/api/reference/globalcheckout/product-info\" target=\"_blank\" rel=\"noopener noreferrer\">Product Info</a> page.  <a href=\"https://developer.ups.com/api/reference/globalcheckout/appendix?loc=en_US\" target=\"_blank\" rel=\"noopener noreferrer\">Appendix</a> </br><p>Explore API documentation and sample applications through GitHub.</p> <a href=\"https://github.com/UPS-API\" target=\"_blank\" rel=\"noopener noreferrer\">   <img src=\"https://www.ups.com/assets/resources/webcontent/images/gitHubButton.svg\" alt=\"Open in GitHub\" style=\"width: 128px; height: 32px;\"> </a>
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.71
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace UPS\GlobalCheckout\GlobalCheckout;

use \ArrayAccess;
use \UPS\GlobalCheckout\ObjectSerializer;

/**
 * BSISV1QuoteRequest Class Doc Comment
 *
 * @category Class
 * @package  UPS\GlobalCheckout
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BSISV1QuoteRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BSIS_v1_QuoteRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'buyer_currency_code' => '',
        'shipper_currency_code' => '',
        'service_level_code' => '',
        'reference_number' => '',
        'shipper_account_number' => '',
        'shipment' => '\UPS\GlobalCheckout\GlobalCheckout\BSISV1Shipment'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'buyer_currency_code' => null,
        'shipper_currency_code' => null,
        'service_level_code' => null,
        'reference_number' => null,
        'shipper_account_number' => null,
        'shipment' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'buyer_currency_code' => 'buyerCurrencyCode',
        'shipper_currency_code' => 'shipperCurrencyCode',
        'service_level_code' => 'serviceLevelCode',
        'reference_number' => 'referenceNumber',
        'shipper_account_number' => 'shipperAccountNumber',
        'shipment' => 'shipment'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'buyer_currency_code' => 'setBuyerCurrencyCode',
        'shipper_currency_code' => 'setShipperCurrencyCode',
        'service_level_code' => 'setServiceLevelCode',
        'reference_number' => 'setReferenceNumber',
        'shipper_account_number' => 'setShipperAccountNumber',
        'shipment' => 'setShipment'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'buyer_currency_code' => 'getBuyerCurrencyCode',
        'shipper_currency_code' => 'getShipperCurrencyCode',
        'service_level_code' => 'getServiceLevelCode',
        'reference_number' => 'getReferenceNumber',
        'shipper_account_number' => 'getShipperAccountNumber',
        'shipment' => 'getShipment'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['buyer_currency_code'] = isset($data['buyer_currency_code']) ? $data['buyer_currency_code'] : null;
        $this->container['shipper_currency_code'] = isset($data['shipper_currency_code']) ? $data['shipper_currency_code'] : null;
        $this->container['service_level_code'] = isset($data['service_level_code']) ? $data['service_level_code'] : null;
        $this->container['reference_number'] = isset($data['reference_number']) ? $data['reference_number'] : null;
        $this->container['shipper_account_number'] = isset($data['shipper_account_number']) ? $data['shipper_account_number'] : null;
        $this->container['shipment'] = isset($data['shipment']) ? $data['shipment'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['shipper_currency_code'] === null) {
            $invalidProperties[] = "'shipper_currency_code' can't be null";
        }
        if ($this->container['shipper_account_number'] === null) {
            $invalidProperties[] = "'shipper_account_number' can't be null";
        }
        if ($this->container['shipment'] === null) {
            $invalidProperties[] = "'shipment' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets buyer_currency_code
     *
     * @return 
     */
    public function getBuyerCurrencyCode()
    {
        return $this->container['buyer_currency_code'];
    }

    /**
     * Sets buyer_currency_code
     *
     * @param  $buyer_currency_code Buyer's currency code adhering to ISO 4217 standard. Click <a href=\"https://developer.ups.com/api/reference/globalcheckout/appendix?loc=en_US\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> for more information.
     *
     * @return $this
     */
    public function setBuyerCurrencyCode($buyer_currency_code)
    {
        $this->container['buyer_currency_code'] = $buyer_currency_code;

        return $this;
    }

    /**
     * Gets shipper_currency_code
     *
     * @return 
     */
    public function getShipperCurrencyCode()
    {
        return $this->container['shipper_currency_code'];
    }

    /**
     * Sets shipper_currency_code
     *
     * @param  $shipper_currency_code Shipper's currency code adhering to ISO 4217 standard. Click <a href=\"https://developer.ups.com/api/reference/globalcheckout/appendix?loc=en_US\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> for more information.
     *
     * @return $this
     */
    public function setShipperCurrencyCode($shipper_currency_code)
    {
        $this->container['shipper_currency_code'] = $shipper_currency_code;

        return $this;
    }

    /**
     * Gets service_level_code
     *
     * @return 
     */
    public function getServiceLevelCode()
    {
        return $this->container['service_level_code'];
    }

    /**
     * Sets service_level_code
     *
     * @param  $service_level_code The code for the UPS Service associated with the shipment. Click <a href=\"https://developer.ups.com/api/reference/globalcheckout/appendix?loc=en_US\" target=\"_blank\" rel=\"noopener noreferrer\">here</a> for more information.
     *
     * @return $this
     */
    public function setServiceLevelCode($service_level_code)
    {
        $this->container['service_level_code'] = $service_level_code;

        return $this;
    }

    /**
     * Gets reference_number
     *
     * @return 
     */
    public function getReferenceNumber()
    {
        return $this->container['reference_number'];
    }

    /**
     * Sets reference_number
     *
     * @param  $reference_number A unique identifier used by clients for internal tracking.
     *
     * @return $this
     */
    public function setReferenceNumber($reference_number)
    {
        $this->container['reference_number'] = $reference_number;

        return $this;
    }

    /**
     * Gets shipper_account_number
     *
     * @return 
     */
    public function getShipperAccountNumber()
    {
        return $this->container['shipper_account_number'];
    }

    /**
     * Sets shipper_account_number
     *
     * @param  $shipper_account_number The Shipper's UPS Account Number.
     *
     * @return $this
     */
    public function setShipperAccountNumber($shipper_account_number)
    {
        $this->container['shipper_account_number'] = $shipper_account_number;

        return $this;
    }

    /**
     * Gets shipment
     *
     * @return \UPS\GlobalCheckout\GlobalCheckout\BSISV1Shipment
     */
    public function getShipment()
    {
        return $this->container['shipment'];
    }

    /**
     * Sets shipment
     *
     * @param \UPS\GlobalCheckout\GlobalCheckout\BSISV1Shipment $shipment shipment
     *
     * @return $this
     */
    public function setShipment($shipment)
    {
        $this->container['shipment'] = $shipment;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
